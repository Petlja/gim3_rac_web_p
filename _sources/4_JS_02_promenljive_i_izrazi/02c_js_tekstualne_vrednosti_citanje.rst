Текстуалне вредности и изрази
=============================

Тип који садржи телстуалне вредности је тип *string*, па текстуалне вредности често називамо стринговима. Стрингови се пишу као низ слова и других симбола, наведених међу наводницима једне од три могуће врсте:

.. activecode:: navodnici_js
    :language: javascript
    :nocodelens:

    alert('Једноструки наводници (апострофи)');
    alert("Двоструки наводници");
    alert(`Обрнути апострофи`);
    alert(`Рек'о је: "Сачекај ме ту!" и потрч'о.`);
    
Обрнути апостроф (обрнути наводник, енгл. *backquote*) се на тастатурама обично налази лево од броја 1 (испод тастера *Esc*). Из последњег реда примера видимо да се наводници могу приказивати као и други симболи када се за означавање почетка и краја текста користи нека друга врста наводника. Наводници на почетку и крају текстуалног податка морају бити исте врсте.

Када наводнике треба приказати као текст, то ћемо најједноставније учинити ако за почетак и крај стринга користимо наводнике неке друге врсте, као у последњем реду претходног примера. Ако је потребно, наводник се може појавити као део текста и између наводника своје врсте, али тада испред њега треба ставити знак ``\``. На тај начин спречавамо да се наводник који желимо да прикажемо тумачи као крај стринга.

.. activecode:: navodnici_escapechar_js
    :language: javascript
    :nocodelens:

    alert('Први начин: Апостроф \', двоструки наводник ", обрнути наводник `');
    alert("Други начин: Апостроф ', двоструки наводник \", обрнути наводник `");
    alert(`Трећи начин: Апостроф ', двоструки наводник ", обрнути наводник \``);

Изразе текстуалног типа најчешће формирамо надовезивањем стрингова (енгл. *string concatenation*), што се постиже употребом оператора ``+``.

.. activecode:: concatenation_js
    :language: javascript
    :nocodelens:

    x = 'Java'
    y = "Script"
    js = x + " " + y;
    alert(js);         // Java Script
    alert(x + 2);      // Java2

Видимо да се оператор ``+`` може употребити и између стринга и броја. У том случају број ће бити претворен (конвертован) у одговарајући стринг (у примеру број ``2`` у стринг ``"2"``), а затим се врши надовезивање стрингова. Исто важи за надовезивање података било које друге врсте на стринг - они ће прво бити претворени у стринг (који садржи текстуалну репрезентацију исте вредности) а затим надовезани на претходни стринг.

Форматирање исписа резултата
----------------------------

Обрнути наводници имају и једну специјалну намену, по којој се разликују од апострофа и двоструких наводника. Наиме, користећи обрнуте наводнике, можемо да форматирамо исписивање резултата. Изразе које желимо да прикажемо треба навести унутар стринга између симбола ``${`` и ``}``. Тако претходни пример можемо да напишемо и овако:

.. activecode:: string_format_js
    :language: javascript
    :nocodelens:

    x = 'Java'
    y = "Script"
    js = `${x} ${y}`;
    alert(js);         // Java Script
    alert(`${x}2`);    // Java2

Овакав начин прављења стринга се често користи, јер је на пример следећи израз који користи форматирање 

.. activecode:: string_format_zbir1_js
    :language: javascript
    :nocodelens:

    let x = 2
    let y = 3
    alert(`${x} + ${y} = ${x+y}`);

прегледнији него (такође исправан) израз који користи надовезивање

.. activecode:: string_format_zbir2_js
    :language: javascript
    :nocodelens:

    let x = 2
    let y = 3
    alert(x + " + " + y + " = " + (x+y));
    
Наглашавамо да остале две врсте наводника не могу да се употребе за форматирање:

.. activecode:: string_format_zbir3_js
    :language: javascript
    :nocodelens:

    let x = 2
    let y = 3
    alert('${x} + ${y} = ${x+y}');
    alert("${x} + ${y} = ${x+y}");
    
Извршите сва три последња програмска сегмента да бисте боље разумели ову разлику.

На основу свега реченог и датих примера јасно је да су обрнути наводници (бар по нечему) другачији од остале две врсте наводника. Осим тога, у већини програмских језика се користе само обични ``'`` и двоструки ``"`` наводници (у неким језицима равноправно а у неким не), што обрнуте наводнике чини још више посебним. Због тога је **уобичајено да се обрнути наводници користе само у ситуацијама када је потребно форматирати испис других података**, мада сам језик (као што смо видели) допушта и употребу код обичних текстуалних података.

~~~~

Појединачне симболе (карактере) можемо да издвојимо из стринга користећи угласте заграде. Иза имена стринга треба у угластим заградама навести позицију жељеног карактера, водећи рачуна да се позиције броје од 0 (а не од 1). На пример, следећи програмчић исписује карактере са позиција 0 и 4 стринга "JavaScript", а то су карактери "J" и "S".


.. activecode:: indeksiranje_stringa_js
    :language: javascript
    :nocodelens:

    let jezik = 'JavaScript'
    alert(jezik[0] + jezik[4]); // JS
