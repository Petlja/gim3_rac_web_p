Увод у Јаваскрипт (*JavaScript*)
================================

*JavaScript* је програмски језик чија је главна намена да омогући додавање функционалности и акција у веб-странама. *JavaScript* омогућава да унесемо неке акције у наше веб-стране, реагујемо на догађаје и додамо неку интеракцију са корисницима нашег веб сајта. *JavaScript* нам омогућава да дамо живот нашој веб-страни.

Основе језика *JavaScript*
--------------------------

У овом курсу подразумевамо да су читаоци већ упознали бар један програмски језик, па се нећемо бавити детаљним објашњавањем основних концепата који су исти код велике већине програмских језика. Уместо тога, убрзано ћемо прећи стандардне појмове као што су наредба, променљива, израз, додељивање, наредбе гранања, наредбе понављања (познате и као петље, односно циклуси), функције, низови (листе), објекти и слично. Нешто више пажње ће бити посвећено специфичностима језика *JavaScript*, то јест оним особинама овог језика које нису уобичајене за остале језике.

Акценат овог поглавља ће бити на примерима формирања интерактивних веб-страна, које могу динамички да мењају свој садржај и остварују комуникацију са корисником, а због којих се *JavaScript* и учи.

JavaScript програм је обичан текстуални фајл у који стављамо низ наредби.

.. code::

    прва наредба;
    друга наредба;
    ...
    последња наредба;

.. learnmorenote::

    Свака наредба треба да се заврши симболом „``;``“ (тачка-зарез). Додуше, *JavaScript* интерпретер нам неће узети за зло чак ни када заборавимо да ставимо симбол „``;``“ на крај наредбе.

    *JavaScript* интерпретер уме сам да препозна крај наредбе (*Automatic semicolon insertion*, скраћено *ASI*). Постоје неке ситуације у којима не ради савршено које ћемо поменути у наредним лекцијама.

    .. petlja-editor:: js_asi

        main.js
        var x = 1
        alert(`Заборавили смо ";" али пример ради`)
        ~~~
        index.html
        <!doctype html>
        <html>
        <body>
            <script src="main.js"></script>
        </body>
        </html>

Као и у другим програмским језицима, поред наредби у *JavaScript* програму пишемо и коментаре. Подсетимо се: коментари су пропратни текст, који служи људима који читају програм да га лакше разумеју. Коментари не утичу на извршавање програма (програм са коментарима се извршава исто као и да коментара нема). У *JavaScript* програмима коментари се пишу или после две косе црте (до краја тренутног реда), или између знакова „``/*``“ и „``*/``“:

.. code:: javascript

    // Овај ред садржи само коментар
    прва наредба;

    /*
    Коментар
    написан
    у више редова
    */
    друга наредба; // Коментар је од две косе црте до краја овог реда.
    ...
    последња наредба;

Неке наредбе језика *JavaScript* су врло сличне одговарајућим наредбама у другим језицима. На пример, наредбе *if* и *while* се могу лако разумети уз мало искуства у било ком програмском језику. Функције су такође (бар у основним случајевима) лако читљиве и њихово разумевање не би требало да представља проблем ономе ко се већ сусретао са функцијама у неком програмском језику.

Други делови језика *JavaScript* могу захтевати мање или више додатне пажње због различитог писања, мада су концептуално познати. На пример, запис „``i++;``“ значи повећај ``i`` за један, док „``n % i``“ представља остатак при дељењу ``n`` са ``i``. Оваква синтакса (као и синтакса наредбе ``for``) се могу наћи у још неким језицима, као што су ``C``, ``C++``, ``C#``, ``Java``. Са друге стране, функције за учитавање података (``prompt``) и њихово приказивање (``alert`` и друге) су потпуно специфичне за *JavaScript*. О овим специфичностима ће бити више речи у наредним лекцијама.

Следећи *JavaScript* програм исписује две поруке са низом бројева који јесу или нису прости бројеви.

.. petlja-editor:: prvi_primer

    main.js
    function prost(n) {
      if (n == 1)
        return false;
      if (n == 2)
        return true;

      let i = 2;
      while (i*i <= n) {
        if (n % i == 0 )
            return false;
        i++;
      }
      return true;
    }

    let prostiBrojevi = '';
    let neprostiBrojevi = '';
    for (n of [1, 2, 3, 4, 6, 9, 18, 27, 29]) {
      if (prost(n)) {
        prostiBrojevi += ' ' + n;
      } else {
        neprostiBrojevi += ' ' + n;
      }
    }
    alert('Brojevi ' + prostiBrojevi + ' su prosti.');
    alert('Brojevi ' + neprostiBrojevi + ' nisu prosti.');
    ~~~
    index.html
    <!doctype html>
    <html>
    <body>
        <p>HTML садржај стране</p>
        <script src="main.js"></script>
    </body>
    </html>

Од читалаца се очекује извесно (не велико) искуство у решавању алгоритамских задатака, какав је овај који сте управо видели, па се таквим задацима нећемо много бавити. Примери и задаци у наредним лекцијама су оријентисани на употребу *JavaScript* програма у мењању садржаја и изгледа веб-страна.
